{"version":3,"sources":["Store/todoSlice.ts","Store/store.ts","Components/AddTodo.tsx","Components/TodoList.tsx","Components/DoneList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["todosSlice","createSlice","name","initialState","todos","reducers","addTodo","state","action","id","length","content","payload","done","updateTodo","map","todo","toggleTodo","filter","deleteTodo","actions","store","configureStore","reducer","selectTodos","AddTodo","useSelector","dispatch","useDispatch","useState","newTodo","setNewTodo","toast","useToast","useEffect","localStorage","setItem","JSON","stringify","onSubmit","e","preventDefault","title","status","duration","isClosable","mt","variant","placeholder","value","onChange","target","colorScheme","px","type","TodoList","every","p","borderRadius","fontSize","divider","borderColor","borderWidth","w","maxW","base","sm","lg","xl","alignItems","size","newtodo","handleUpdate","placement","hasArrow","label","bg","icon","isRound","onClick","DoneList","as","App","useColorMode","colorMode","toggleColorMode","alignSelf","mb","fontWeight","bgGradient","bgClip","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.681f8552.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface Todo {\n\tid: number;\n\tcontent: string;\n\tdone: boolean;\n}\n\ninterface TodosSliceState {\n\ttodos: Todo[];\n}\n\nconst initialState: TodosSliceState = {\n\ttodos: [],\n};\n\nexport const todosSlice = createSlice({\n\tname: \"todo\",\n\tinitialState,\n\treducers: {\n\t\taddTodo: (state, action: PayloadAction<string>) => {\n\t\t\tstate.todos = [\n\t\t\t\t...state.todos,\n\t\t\t\t{\n\t\t\t\t\tid: state.todos.length,\n\t\t\t\t\tcontent: action.payload,\n\t\t\t\t\tdone: false,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tupdateTodo: (state, action: PayloadAction<Todo>) => {\n\t\t\tstate.todos.map((todo) => {\n\t\t\t\tif (todo.id === action.payload.id) {\n\t\t\t\t\treturn (todo.content = action.payload.content);\n\t\t\t\t}\n\t\t\t\treturn todo;\n\t\t\t});\n\t\t},\n\t\ttoggleTodo: (state, action: PayloadAction<number>) => {\n\t\t\tstate.todos.filter((todo) => {\n\t\t\t\tif (todo.id === action.payload) {\n\t\t\t\t\treturn (todo.done = !todo.done);\n\t\t\t\t}\n\t\t\t\treturn todo;\n\t\t\t});\n\t\t},\n\t\tdeleteTodo(state, action: PayloadAction<number>) {\n\t\t\tstate.todos = state.todos.filter((todo) => todo.id !== action.payload);\n\t\t},\n\t},\n});\n\n// Action creators are generated for each case reducer function\nexport const { deleteTodo, updateTodo, addTodo, toggleTodo } =\n\ttodosSlice.actions;\n\nexport default todosSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { todosSlice } from \"./todoSlice\";\n\nexport const store = configureStore({\n\treducer: {\n\t\ttodos: todosSlice.reducer,\n\t},\n});\n\ntype RootState = ReturnType<typeof store.getState>;\n\nexport const selectTodos = (state: RootState) => state.todos.todos;\n","import React, { useState, useEffect } from \"react\";\nimport { HStack, Input, Button, useToast } from \"@chakra-ui/react\";\nimport { addTodo } from \"../Store/todoSlice\";\nimport { selectTodos } from \"../Store/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nfunction AddTodo() {\n\tconst todos = useSelector(selectTodos);\n\tconst dispatch = useDispatch();\n\tconst [newTodo, setNewTodo] = useState<string>(\"\");\n\tconst toast = useToast();\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"todos\", JSON.stringify(todos));\n\t}, [todos]);\n\n\tfunction handleSubmit(e: React.SyntheticEvent) {\n\t\te.preventDefault();\n\t\tif (!newTodo) {\n\t\t\ttoast({\n\t\t\t\ttitle: \"Please add content!\",\n\t\t\t\tstatus: \"error\",\n\t\t\t\tduration: 2000,\n\t\t\t\tisClosable: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tdispatch(addTodo(newTodo));\n\t\tsetNewTodo(\"\");\n\t}\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<HStack mt='10'>\n\t\t\t\t<Input\n\t\t\t\t\tvariant='filled'\n\t\t\t\t\tplaceholder='Enter todo here...'\n\t\t\t\t\tvalue={newTodo}\n\t\t\t\t\tonChange={(e) => setNewTodo(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Button colorScheme='yellow' px='8' type='submit'>\n\t\t\t\t\tAdd Todo\n\t\t\t\t</Button>\n\t\t\t</HStack>\n\t\t</form>\n\t);\n}\nexport default AddTodo;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectTodos } from \"../Store/store\";\nimport { toggleTodo, updateTodo, deleteTodo, Todo } from \"../Store/todoSlice\";\nimport {\n\tVStack,\n\tHStack,\n\tInput,\n\tIconButton,\n\tStackDivider,\n\tSpacer,\n\tBadge,\n\tPopover,\n\tButton,\n\tPopoverBody,\n\tPopoverCloseButton,\n\tPopoverHeader,\n\tPopoverContent,\n\tPopoverArrow,\n\tPopoverTrigger,\n\tPortal,\n\tTooltip,\n} from \"@chakra-ui/react\";\nimport { FaTrash, FaToggleOff } from \"react-icons/fa\";\nimport React from \"react\";\nfunction TodoList() {\n\tconst todos = useSelector(selectTodos);\n\n\tconst dispatch = useDispatch();\n\n\tconst handleUpdate = (e: React.ChangeEvent<HTMLInputElement>, id: number) => {\n\t\tconst newtodo = {\n\t\t\tid: id,\n\t\t\tcontent: e.target.value,\n\t\t\tdone: false,\n\t\t};\n\t\tdispatch(updateTodo(newtodo));\n\t};\n\tif (todos.every((todo: Todo) => todo.done === true)) {\n\t\treturn (\n\t\t\t<Badge\n\t\t\t\tp='5'\n\t\t\t\tborderRadius='lg'\n\t\t\t\tfontSize='26'\n\t\t\t\tvariant='solid'\n\t\t\t\tcolorScheme='green'>\n\t\t\t\tYou can add Todos now!\n\t\t\t</Badge>\n\t\t);\n\t}\n\treturn (\n\t\t<VStack\n\t\t\tmt='8'\n\t\t\tdivider={<StackDivider />}\n\t\t\tborderColor='gray.200'\n\t\t\tborderWidth='2px'\n\t\t\tborderRadius='lg'\n\t\t\tp='4'\n\t\t\tw='100%'\n\t\t\tmaxW={{ base: \"90vw\", sm: \"80vw\", lg: \"50vw\", xl: \"40vw\" }}\n\t\t\talignItems='stretch'>\n\t\t\t{todos\n\t\t\t\t.filter((todo) => todo.done === false)\n\t\t\t\t.map((todo) => (\n\t\t\t\t\t<HStack key={todo.id}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\tvariant='unstyled'\n\t\t\t\t\t\t\tonChange={(e) => handleUpdate(e, todo.id)}\n\t\t\t\t\t\t\tvalue={todo.content}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tplacement='auto-start'\n\t\t\t\t\t\t\thasArrow\n\t\t\t\t\t\t\tlabel='Finished'\n\t\t\t\t\t\t\tborderRadius='lg'\n\t\t\t\t\t\t\tbg='gray.400'\n\t\t\t\t\t\t\tfontSize='lx'>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label='done Sign'\n\t\t\t\t\t\t\t\ticon={<FaToggleOff />}\n\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\tonClick={() => dispatch(toggleTodo(todo.id))}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t<Popover placement='right-end'>\n\t\t\t\t\t\t\t<PopoverTrigger>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='Delete Sign'\n\t\t\t\t\t\t\t\t\ticon={<FaTrash />}\n\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PopoverTrigger>\n\t\t\t\t\t\t\t<Portal>\n\t\t\t\t\t\t\t\t<PopoverContent>\n\t\t\t\t\t\t\t\t\t<PopoverArrow />\n\t\t\t\t\t\t\t\t\t<PopoverHeader>Are you sure?</PopoverHeader>\n\t\t\t\t\t\t\t\t\t<PopoverCloseButton />\n\t\t\t\t\t\t\t\t\t<PopoverBody>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolorScheme='blue'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch(deleteTodo(todo.id))}>\n\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</PopoverBody>\n\t\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t\t</Portal>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t</HStack>\n\t\t\t\t))}\n\t\t</VStack>\n\t);\n}\n\nexport default TodoList;\n","import { selectTodos } from \"../Store/store\";\nimport { toggleTodo, deleteTodo } from \"../Store/todoSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n\tVStack,\n\tHStack,\n\tText,\n\tIconButton,\n\tStackDivider,\n\tSpacer,\n\tBadge,\n\tPopover,\n\tButton,\n\tPopoverBody,\n\tPopoverCloseButton,\n\tPopoverHeader,\n\tPopoverContent,\n\tPopoverArrow,\n\tPopoverTrigger,\n\tPortal,\n\tTooltip,\n} from \"@chakra-ui/react\";\n\nimport { FaTrash, FaToggleOn } from \"react-icons/fa\";\n\nfunction DoneList() {\n\tconst todos = useSelector(selectTodos);\n\tconst dispatch = useDispatch();\n\tif (todos.every((todo) => todo.done === false)) {\n\t\treturn (\n\t\t\t<Badge\n\t\t\t\tp='5'\n\t\t\t\tborderRadius='lg'\n\t\t\t\tfontSize='26'\n\t\t\t\tvariant='solid'\n\t\t\t\tcolorScheme='green'>\n\t\t\t\tFinish your Todos!\n\t\t\t</Badge>\n\t\t);\n\t}\n\treturn (\n\t\t<VStack\n\t\t\tmt='8'\n\t\t\tdivider={<StackDivider />}\n\t\t\tborderColor='gray.200'\n\t\t\tborderWidth='2px'\n\t\t\tborderRadius='lg'\n\t\t\tp='4'\n\t\t\tw='100%'\n\t\t\tmaxW={{ base: \"90vw\", sm: \"80vw\", lg: \"50vw\", xl: \"40vw\" }}\n\t\t\talignItems='stretch'>\n\t\t\t{todos.map((todo) => {\n\t\t\t\tif (todo.done) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<HStack key={todo.id}>\n\t\t\t\t\t\t\t<Text as='s'>{todo.content}</Text>\n\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\tplacement='auto-start'\n\t\t\t\t\t\t\t\thasArrow\n\t\t\t\t\t\t\t\tlabel='Not Finished'\n\t\t\t\t\t\t\t\tbg='gray.400'\n\t\t\t\t\t\t\t\tborderRadius='lg'\n\t\t\t\t\t\t\t\tfontSize='lx'>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='done Sign'\n\t\t\t\t\t\t\t\t\ticon={<FaToggleOn />}\n\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\tonClick={() => dispatch(toggleTodo(todo.id))}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t\t<Popover placement='right-end'>\n\t\t\t\t\t\t\t\t<PopoverTrigger>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\taria-label='Delete Sign'\n\t\t\t\t\t\t\t\t\t\ticon={<FaTrash />}\n\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PopoverTrigger>\n\t\t\t\t\t\t\t\t<Portal>\n\t\t\t\t\t\t\t\t\t<PopoverContent>\n\t\t\t\t\t\t\t\t\t\t<PopoverArrow />\n\t\t\t\t\t\t\t\t\t\t<PopoverHeader>Are you sure?</PopoverHeader>\n\t\t\t\t\t\t\t\t\t\t<PopoverCloseButton />\n\t\t\t\t\t\t\t\t\t\t<PopoverBody>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='blue'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch(deleteTodo(todo.id))}>\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</PopoverBody>\n\t\t\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t\t\t</Portal>\n\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})}\n\t\t</VStack>\n\t);\n}\n\nexport default DoneList;\n","import AddTodo from \"./Components/AddTodo\";\nimport TodoList from \"./Components/TodoList\";\nimport { VStack, Heading, IconButton, useColorMode } from \"@chakra-ui/react\";\nimport { FaSun, FaMoon } from \"react-icons/fa\";\nimport DoneList from \"./Components/DoneList\";\n\nfunction App() {\n\tconst { colorMode, toggleColorMode } = useColorMode();\n\treturn (\n\t\t<VStack p={4}>\n\t\t\t<IconButton\n\t\t\t\taria-label='Change Color Mode'\n\t\t\t\ticon={colorMode === \"light\" ? <FaSun /> : <FaMoon />}\n\t\t\t\tisRound={true}\n\t\t\t\tsize='lg'\n\t\t\t\talignSelf='flex-end'\n\t\t\t\tonClick={toggleColorMode}\n\t\t\t\tmb='10'\n\t\t\t/>\n\t\t\t<Heading\n\t\t\t\tp='8'\n\t\t\t\tfontWeight='extrabold'\n\t\t\t\tbgGradient='linear(to-r, yellow.500, yellow.300, green.500)'\n\t\t\t\tbgClip='text'\n\t\t\t\tsize='2xl'>\n\t\t\t\tTodo Application\n\t\t\t</Heading>\n\t\t\t<TodoList />\n\t\t\t<AddTodo />\n\t\t\t<Heading p='8' fontWeight='bold' color='yellow.500' size='xl'>\n\t\t\t\tDone List\n\t\t\t</Heading>\n\t\t\t<DoneList />\n\t\t</VStack>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from \"./Store/store\";\nimport { Provider } from \"react-redux\";\nimport {\n\tChakraProvider,\n\tColorModeScript,\n\textendTheme,\n\tThemeConfig,\n} from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n\tinitialColorMode: \"light\",\n\tuseSystemColorMode: true,\n};\n\nconst theme = extendTheme({ config });\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ChakraProvider>\n\t\t\t\t<ColorModeScript initialColorMode={theme.config.initialColorMode} />\n\t\t\t\t<App />\n\t\t\t</ChakraProvider>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}